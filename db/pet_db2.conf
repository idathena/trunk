//=========================================================================
//= Pets Aditional Database
//=========================================================================

/**************************************************************************
 ************* Entry structure ********************************************
 **************************************************************************
{
	Id: (int)                          // Monster ID of the pet.
	SpriteName: (string)               // Name of the monster as defined in the database
	Name: (string)                     // The display name of the monster when hatched.
	TamingItem: (int)                  // (optional, defaults to 0) Pet Tame Item ID.
	EggItem: (int)                     // (optional, defaults to 0) Pet Egg ID.
	AccessoryItem: (int)               // (optional, defaults to 0) Pet Accessory ID.
	FoodItem: (int)                    // (optional, defaults to 0) Pet Food ID.
	HungerPoints: (int)                // (optional, defaults to 0) The amount Hunger is decreased every [HungryDelay] seconds.
	HungerDelay: (int)                 // (optional, defaults to 0) The amount of time it takes for hunger to decrease after feeding.
	Intimacy: {
		Initial: (int)             // (optional, defaults to 0) Amount of Intimacy the pet starts with.
		FeedIncrement: (int)       // (optional, defaults to 0) Amount of Intimacy that is increased when fed.
		OverFeedDecrement: (int)   // (optional, defaults to 0) Amount of Intimacy that is decreased when over-fed.
		OwnerDeathDecrement: (int) // (optional, defaults to 0) Amount of Intimacy that is decreased when the pet owner dies.
	}
	CaptureRate: (int)                 // (optional, defaults to 0) Capture success rate (10000 = 100%)
	Speed: (int)                       // (optional, defaults to 0) Pet's walk speed.
	SpecialPerformance: (boolean)      // (optional, defaults to false) Special Performance.
	TalkWithEmotes: (boolean)          // (optional, defaults to false) Disables pet talk (instead of talking they emote  with /!.)
	AttackRate: (int)                  // (optional, defaults to 0) Rate of which the pet will attack (requires at least pet_support_min_friendly intimacy).
	DefendRate: (int)                  // (optional, defaults to 0) Rate of which the pet will retaliate when master is being attacked (requires at least pet_support_min_friendly intimacy).
	ChangeTargetRate: (int)            // (optional, defaults to 0) Rate of which the pet will change its attack target.
	Evolve: {
		EggID_X: { (int)                     // (optional) X = Evolved Pet EggID.
			ItemID_Y (int): Amount (int) // (optional) Y = Item IDs required to perform evolution.
			...
		}
	}
	PetScript: (string)                // Script to execute when the pet is hatched (requires pet_status_support to be enabled).
	PetFriendlyScript: (string)        // Script to execute when the pet is hatched (requires at least pet_bonus_min_friendly intimacy, independent of pet_script).
},
**************************************************************************/

// Entries in this file will override the ones in /(pre-)re/pet_db.conf

pet_db: (
)
